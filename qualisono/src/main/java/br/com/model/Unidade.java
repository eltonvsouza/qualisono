package br.com.model;

// Generated 08/03/2012 15:36:20 by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Unidade generated by hbm2java
 */
@Entity
@Table(name = "unidade", catalog = "qualisono")
public class Unidade implements java.io.Serializable {

	private Integer codigo;
	private String descricao;
	private Date validade;
	private Set<CompraItem> compraitems = new HashSet<CompraItem>(0);
	private Set<Geral> gerals = new HashSet<Geral>(0);
	private Set<Venda> vendas = new HashSet<Venda>(0);
	private Set<Compra> compras = new HashSet<Compra>(0);
	private Set<Transportadora> transportadoras = new HashSet<Transportadora>(0);
	private Set<Contasapagar> contasapagars = new HashSet<Contasapagar>(0);
	private Set<Cliente> clientes = new HashSet<Cliente>(0);
	private Set<Fornecedor> fornecedors = new HashSet<Fornecedor>(0);
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);
	private Set<TipoFuncionario> tipofuncionarios = new HashSet<TipoFuncionario>(0);
	private Set<Funcionario> funcionarios = new HashSet<Funcionario>(0);
	private Set<Parcelasapagar> parcelasapagars = new HashSet<Parcelasapagar>(0);
	private Set<VendaItem> vendaitems = new HashSet<VendaItem>(0);
	private Set<Configuracao> configuracaos = new HashSet<Configuracao>(0);
	private Set<Produto> produtos = new HashSet<Produto>(0);
	private Set<Agenda> agendas = new HashSet<Agenda>(0);

	public Unidade() {
	}

	public Unidade(String descricao, Date validade) {
		this.descricao = descricao;
		this.validade = validade;
	}

	public Unidade(String descricao, Date validade,
			Set<CompraItem> compraitems, Set<Geral> gerals, Set<Venda> vendas,
			Set<Compra> compras, Set<Transportadora> transportadoras,
			Set<Contasapagar> contasapagars, Set<Cliente> clientes,
			Set<Fornecedor> fornecedors, Set<Usuario> usuarios,
			Set<TipoFuncionario> tipofuncionarios,
			Set<Funcionario> funcionarios, Set<Parcelasapagar> parcelasapagars,
			Set<VendaItem> vendaitems, Set<Configuracao> configuracaos,
			Set<Produto> produtos, Set<Agenda> agendas) {
		this.descricao = descricao;
		this.validade = validade;
		this.compraitems = compraitems;
		this.gerals = gerals;
		this.vendas = vendas;
		this.compras = compras;
		this.transportadoras = transportadoras;
		this.contasapagars = contasapagars;
		this.clientes = clientes;
		this.fornecedors = fornecedors;
		this.usuarios = usuarios;
		this.tipofuncionarios = tipofuncionarios;
		this.funcionarios = funcionarios;
		this.parcelasapagars = parcelasapagars;
		this.vendaitems = vendaitems;
		this.configuracaos = configuracaos;
		this.produtos = produtos;
		this.agendas = agendas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "codigo", unique = true, nullable = false)
	public Integer getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	@Column(name = "descricao", nullable = false, length = 100)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "validade", nullable = false, length = 10)
	public Date getValidade() {
		return this.validade;
	}

	public void setValidade(Date validade) {
		this.validade = validade;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<CompraItem> getCompraitems() {
		return this.compraitems;
	}

	public void setCompraitems(Set<CompraItem> compraitems) {
		this.compraitems = compraitems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Geral> getGerals() {
		return this.gerals;
	}

	public void setGerals(Set<Geral> gerals) {
		this.gerals = gerals;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Venda> getVendas() {
		return this.vendas;
	}

	public void setVendas(Set<Venda> vendas) {
		this.vendas = vendas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Compra> getCompras() {
		return this.compras;
	}

	public void setCompras(Set<Compra> compras) {
		this.compras = compras;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Transportadora> getTransportadoras() {
		return this.transportadoras;
	}

	public void setTransportadoras(Set<Transportadora> transportadoras) {
		this.transportadoras = transportadoras;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Contasapagar> getContasapagars() {
		return this.contasapagars;
	}

	public void setContasapagars(Set<Contasapagar> contasapagars) {
		this.contasapagars = contasapagars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Cliente> getClientes() {
		return this.clientes;
	}

	public void setClientes(Set<Cliente> clientes) {
		this.clientes = clientes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Fornecedor> getFornecedors() {
		return this.fornecedors;
	}

	public void setFornecedors(Set<Fornecedor> fornecedors) {
		this.fornecedors = fornecedors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<TipoFuncionario> getTipofuncionarios() {
		return this.tipofuncionarios;
	}

	public void setTipofuncionarios(Set<TipoFuncionario> tipofuncionarios) {
		this.tipofuncionarios = tipofuncionarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Funcionario> getFuncionarios() {
		return this.funcionarios;
	}

	public void setFuncionarios(Set<Funcionario> funcionarios) {
		this.funcionarios = funcionarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Parcelasapagar> getParcelasapagars() {
		return this.parcelasapagars;
	}

	public void setParcelasapagars(Set<Parcelasapagar> parcelasapagars) {
		this.parcelasapagars = parcelasapagars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<VendaItem> getVendaitems() {
		return this.vendaitems;
	}

	public void setVendaitems(Set<VendaItem> vendaitems) {
		this.vendaitems = vendaitems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Configuracao> getConfiguracaos() {
		return this.configuracaos;
	}

	public void setConfiguracaos(Set<Configuracao> configuracaos) {
		this.configuracaos = configuracaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Produto> getProdutos() {
		return this.produtos;
	}

	public void setProdutos(Set<Produto> produtos) {
		this.produtos = produtos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "unidade")
	public Set<Agenda> getAgendas() {
		return this.agendas;
	}

	public void setAgendas(Set<Agenda> agendas) {
		this.agendas = agendas;
	}

}
