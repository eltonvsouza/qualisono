package br.com.model;

// Generated 08/03/2012 15:36:20 by Hibernate Tools 3.2.4.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * Configuracao generated by hbm2java
 */
@Entity
@Table(name = "configuracao", catalog = "qualisono", uniqueConstraints = @UniqueConstraint(columnNames = {
		"unidade", "grupo", "tipo" }))
public class Configuracao implements java.io.Serializable {

	private Integer codigo;
	private Unidade unidade;
	private String grupo;
	private String tipo;
	private String descricao;
	private String valor;

	public Configuracao() {
	}

	public Configuracao(Unidade unidade, String grupo, String tipo, String valor) {
		this.unidade = unidade;
		this.grupo = grupo;
		this.tipo = tipo;
		this.valor = valor;
	}

	public Configuracao(Unidade unidade, String grupo, String tipo,
			String descricao, String valor) {
		this.unidade = unidade;
		this.grupo = grupo;
		this.tipo = tipo;
		this.descricao = descricao;
		this.valor = valor;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "codigo", unique = true, nullable = false)
	public Integer getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}
	@NotNull(message="Campo Unidade: Obrigatório")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "unidade", nullable = false)
	public Unidade getUnidade() {
		return this.unidade;
	}

	public void setUnidade(Unidade unidade) {
		this.unidade = unidade;
	}

	@NotEmpty(message="Campo Grupo: Obrigatório")
	@Length(min=3, max=20, message="Campo Grupo: Tamanho mínimo de 3 caracteres")
	@Column(name = "grupo", nullable = false, length = 20)
	public String getGrupo() {
		return this.grupo;
	}

	public void setGrupo(String grupo) {
		this.grupo = grupo;
	}

	@NotEmpty(message="Campo Tipo: Obrigatório")
	@Length(min=3, max=20, message="Campo Tipo: Tamanho mínimo de 3 caracteres")
	@Column(name = "tipo", nullable = false, length = 20)
	public String getTipo() {
		return this.tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	@Column(name = "descricao", length = 100)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@NotEmpty(message="Campo Valor: Obrigatório")
	@Length(min=1, max=200, message="Campo Valor: Tamanho mínimo de 1 caracteres")
	@Column(name = "valor", nullable = false, length = 200)
	public String getValor() {
		return this.valor;
	}

	public void setValor(String valor) {
		this.valor = valor;
	}

}
